/*
 MIT
*/
(function(){angular.module("ngCoTLogin",["CoTLogin.loginoptions","CoTLogin.userroles","CoTLogin.sessionservice","CoTLogin.loginservice"]).constant("AUTH_EVENTS",{loginSuccess:"auth-login-success",loginFailed:"auth-login-failed",logoutSuccess:"auth-logout-success",sessionTimeout:"auth-session-timeout",notAuthenticated:"auth-not-authenticated",notAuthorized:"auth-not-authorized"}).config(["$httpProvider",function(b){b.interceptors.push(["$rootScope","$q","AUTH_EVENTS",function(b,h,k){return{responseError:function(g){b.$broadcast({401:k.notAuthenticated,
403:k.notAuthorized,419:k.sessionTimeout,440:k.sessionTimeout}[g.status],g);return h.reject(g)}}}])}]);angular.module("CoTLogin.loginoptions",[]).provider("CoTLoginOptions",function(){var b={endpoint:"http://localhost:8080",app:"app"};this.setOptions=function(c){b=c};this.getLoginOptions=function(){return b};this.$get=function(){return{getLoginOptions:function(){return b}}}});angular.module("CoTLogin.userroles",[]).provider("CoTUserRoles",function(){var b={all:"*",admin:"admin",editor:"editor",guest:"guest"};
this.setOptions=function(c){b=c};this.getUserRoles=function(){return b};this.$get=function(){return{getUserRoles:function(){return b}}}});angular.module("CoTLogin.sessionservice",[]).service("CoTSession",function(){this.create=function(b){this.user=b;this.sessionId=b.sid;this.userRoles=b.cotUser.groupMemberships};this.destroy=function(){this.userRoles=this.sessionId=this.user=null;console.log("Session destroyed.")};return this});angular.module("CoTLogin.loginservice",[]).service("CoTLoginService",
["$http","$rootScope","$window","CoTSession","AUTH_EVENTS","CoTLoginOptions",function(b,c,h,k,g,l){var f={},d=l.getLoginOptions(),m={headers:{"Content-Type":"application/x-www-form-urlencoded;charset=utf-8;"}};f.endpoint=function(a){d.endpoint=a};f.app=function(a){d.app=a};f.options=function(a){d=a};f.login=function(a,n,e){a=$.param({user:a.username,pwd:a.password,app:d.app});b.post(d.endpoint,a,m).then(function(a){if(a.data.error)c.$broadcast(g.loginFailed),e("The system could not log you in. Please check your username/password and try again.");
else if(a.data)try{h.sessionStorage[d.app+"_userInfo"]=JSON.stringify(a.data),h.sessionStorage[d.app+"_sessionId"]=a.data.sid,f.createSession(a.data),c.currentUser=a.data,c.$broadcast(g.loginSuccess),n(a.data)}catch(b){c.$broadcast(g.loginFailed),e("The system encountered an unexpected error. Please try again later.")}else c.$broadcast(g.loginFailed),e("The system encountered an unexpected error. Please try again later.")},function(a){c.$broadcast(g.loginFailed);e("The system is currently unavailable. Please try again later.")})};
f.checkSession=function(a,c){var e;h.sessionStorage[d.app+"_userInfo"]&&(e=h.sessionStorage[d.app+"_sessionId"]);return e?b.get(d.endpoint+"/"+e).then(function(b){a(b,e)},function(a){c(a)}):!1};f.createSession=function(a){k.create(a)};f.isAuthenticated=function(){return f.checkSession(function(a,b){if(a.data)try{h.sessionStorage[d.app+"_userInfo"]=JSON.stringify(a.data);h.sessionStorage[d.app+"_sessionId"]=b;var e=a.data;e.sid=b;f.createSession(e);c.currentUser=e;return!0}catch(g){return!1}else return!1},
function(a){return!1})};f.isAuthorized=function(a){angular.isArray(a)||(a=[a]);try{var b=JSON.parse(h.sessionStorage[d.app+"_userInfo"]).cotUser.groupMemberships.filter(function(b){return-1!=a.indexOf(b)})}catch(e){c.$broadcast(g.notAuthorized)}return 0<b.length};f.logout=function(a){h.sessionStorage.removeItem(d.app+"_userInfo");h.sessionStorage.removeItem(d.app+"_sessionId");k.destroy();a&&c.$broadcast(g.logoutSuccess)};return f}])})();
